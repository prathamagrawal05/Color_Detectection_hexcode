{"ast":null,"code":"var _jsxFileName = \"/Users/ashraygattani/Documents/most/my-react-app/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport './App.css';\nimport jsPDF from 'jspdf';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [image, setImage] = useState(null);\n  const [detectedColors, setDetectedColors] = useState([]);\n  const [contrastColor, setContrastColor] = useState('#FFFFFF'); // Default background color\n  const [contrastResults, setContrastResults] = useState([]);\n  const handleImageUpload = event => {\n    const file = event.target.files[0];\n    if (file) {\n      const img = new Image();\n      img.src = URL.createObjectURL(file);\n      img.onload = () => {\n        // Here you would run your K-Means color detection\n        const colors = [{\n          hex: '#00796b',\n          percentage: '40%'\n        }, {\n          hex: '#ff5722',\n          percentage: '30%'\n        }, {\n          hex: '#3f51b5',\n          percentage: '20%'\n        }, {\n          hex: '#ffc107',\n          percentage: '10%'\n        }];\n        setDetectedColors(colors);\n        setImage(img.src);\n      };\n    }\n  };\n  const generateReport = () => {\n    const doc = new jsPDF();\n    doc.text('Color Detection Report', 20, 20);\n    if (image) {\n      doc.addImage(image, 'PNG', 20, 30, 160, 90); // Add the uploaded image\n    }\n    detectedColors.forEach((color, index) => {\n      doc.setFillColor(color.hex); // Set fill color\n      doc.rect(20, 130 + index * 20, 20, 20, 'F'); // Draw color box\n      doc.text(`Color ${index + 1}: ${color.hex} - ${color.percentage}`, 50, 140 + index * 20);\n    });\n    doc.save('color_report.pdf');\n  };\n  const checkContrast = color => {\n    const contrastResultsTemp = detectedColors.map(detectedColor => {\n      const ratio = calculateContrastRatio(detectedColor.hex, color);\n      return {\n        color: detectedColor.hex,\n        ratio\n      };\n    });\n    setContrastResults(contrastResultsTemp);\n  };\n  const calculateContrastRatio = (hex1, hex2) => {\n    const getLuminance = hex => {\n      const [r, g, b] = hex.match(/\\w\\w/g).map(x => parseInt(x, 16));\n      return (0.2126 * r + 0.7152 * g + 0.0722 * b) / 255;\n    };\n    const luminance1 = getLuminance(hex1);\n    const luminance2 = getLuminance(hex2);\n    const ratio = (luminance1 + 0.05) / (luminance2 + 0.05);\n    return ratio.toFixed(2); // Return formatted ratio\n  };\n  const handleContrastChange = event => {\n    const value = event.target.value;\n    setContrastColor(value);\n    checkContrast(value);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"intro\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Color Detection App\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Upload an image to detect its dominant colors!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        accept: \"image/*\",\n        onChange: handleImageUpload\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 13\n    }, this), image && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"image-preview\",\n      children: /*#__PURE__*/_jsxDEV(\"img\", {\n        src: image,\n        alt: \"Uploaded\",\n        className: \"uploaded-image\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 17\n    }, this), detectedColors.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"color-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Detected Colors\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 21\n      }, this), detectedColors.map((color, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"color-block\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"color-swatch\",\n          style: {\n            backgroundColor: color.hex\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"color-hex\",\n          children: color.hex\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"percentage-text\",\n          children: color.percentage\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 29\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 25\n      }, this)), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: generateReport,\n        className: \"download-report-button\",\n        children: \"Download Report\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"contrast-checker\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Color Contrast Checker\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"background-color\",\n        children: \"Choose Background Color:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"color\",\n        id: \"background-color\",\n        value: contrastColor,\n        onChange: handleContrastChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"contrast-results\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Contrast Ratios\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: contrastResults.map((result, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n            style: {\n              color: result.color\n            },\n            children: [result.color, \": \", result.ratio]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 113,\n            columnNumber: 29\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 73,\n    columnNumber: 9\n  }, this);\n}\n_s(App, \"qY7/AQIUXcVi69CkWNwYOzJNQ+c=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","jsPDF","jsxDEV","_jsxDEV","App","_s","image","setImage","detectedColors","setDetectedColors","contrastColor","setContrastColor","contrastResults","setContrastResults","handleImageUpload","event","file","target","files","img","Image","src","URL","createObjectURL","onload","colors","hex","percentage","generateReport","doc","text","addImage","forEach","color","index","setFillColor","rect","save","checkContrast","contrastResultsTemp","map","detectedColor","ratio","calculateContrastRatio","hex1","hex2","getLuminance","r","g","b","match","x","parseInt","luminance1","luminance2","toFixed","handleContrastChange","value","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","accept","onChange","alt","length","style","backgroundColor","onClick","htmlFor","id","result","_c","$RefreshReg$"],"sources":["/Users/ashraygattani/Documents/most/my-react-app/src/App.js"],"sourcesContent":["import React, { useState } from 'react';\nimport './App.css';\nimport jsPDF from 'jspdf';\n\nfunction App() {\n    const [image, setImage] = useState(null);\n    const [detectedColors, setDetectedColors] = useState([]);\n    const [contrastColor, setContrastColor] = useState('#FFFFFF'); // Default background color\n    const [contrastResults, setContrastResults] = useState([]);\n\n    const handleImageUpload = (event) => {\n        const file = event.target.files[0];\n        if (file) {\n            const img = new Image();\n            img.src = URL.createObjectURL(file);\n            img.onload = () => {\n                // Here you would run your K-Means color detection\n                const colors = [\n                    { hex: '#00796b', percentage: '40%' },\n                    { hex: '#ff5722', percentage: '30%' },\n                    { hex: '#3f51b5', percentage: '20%' },\n                    { hex: '#ffc107', percentage: '10%' },\n                ];\n                setDetectedColors(colors);\n                setImage(img.src);\n            };\n        }\n    };\n\n    const generateReport = () => {\n        const doc = new jsPDF();\n        doc.text('Color Detection Report', 20, 20);\n        if (image) {\n            doc.addImage(image, 'PNG', 20, 30, 160, 90); // Add the uploaded image\n        }\n\n        detectedColors.forEach((color, index) => {\n            doc.setFillColor(color.hex); // Set fill color\n            doc.rect(20, 130 + index * 20, 20, 20, 'F'); // Draw color box\n            doc.text(`Color ${index + 1}: ${color.hex} - ${color.percentage}`, 50, 140 + index * 20);\n        });\n\n        doc.save('color_report.pdf');\n    };\n\n    const checkContrast = (color) => {\n        const contrastResultsTemp = detectedColors.map((detectedColor) => {\n            const ratio = calculateContrastRatio(detectedColor.hex, color);\n            return { color: detectedColor.hex, ratio };\n        });\n        setContrastResults(contrastResultsTemp);\n    };\n\n    const calculateContrastRatio = (hex1, hex2) => {\n        const getLuminance = (hex) => {\n            const [r, g, b] = hex.match(/\\w\\w/g).map(x => parseInt(x, 16));\n            return (0.2126 * r + 0.7152 * g + 0.0722 * b) / 255;\n        };\n\n        const luminance1 = getLuminance(hex1);\n        const luminance2 = getLuminance(hex2);\n        const ratio = (luminance1 + 0.05) / (luminance2 + 0.05);\n        return ratio.toFixed(2); // Return formatted ratio\n    };\n\n    const handleContrastChange = (event) => {\n        const value = event.target.value;\n        setContrastColor(value);\n        checkContrast(value);\n    };\n\n    return (\n        <div className=\"App\">\n            <div className=\"intro\">\n                <h1>Color Detection App</h1>\n                <p>Upload an image to detect its dominant colors!</p>\n                <input type=\"file\" accept=\"image/*\" onChange={handleImageUpload} />\n            </div>\n\n            {image && (\n                <div className=\"image-preview\">\n                    <img src={image} alt=\"Uploaded\" className=\"uploaded-image\" />\n                </div>\n            )}\n\n            {detectedColors.length > 0 && (\n                <div className=\"color-container\">\n                    <h2>Detected Colors</h2>\n                    {detectedColors.map((color, index) => (\n                        <div key={index} className=\"color-block\">\n                            <div className=\"color-swatch\" style={{ backgroundColor: color.hex }} />\n                            <div className=\"color-hex\">{color.hex}</div>\n                            <div className=\"percentage-text\">{color.percentage}</div>\n                        </div>\n                    ))}\n                    <button onClick={generateReport} className=\"download-report-button\">Download Report</button>\n                </div>\n            )}\n\n            <div className=\"contrast-checker\">\n                <h2>Color Contrast Checker</h2>\n                <label htmlFor=\"background-color\">Choose Background Color:</label>\n                <input\n                    type=\"color\"\n                    id=\"background-color\"\n                    value={contrastColor}\n                    onChange={handleContrastChange}\n                />\n                <div className=\"contrast-results\">\n                    <h3>Contrast Ratios</h3>\n                    <ul>\n                        {contrastResults.map((result, index) => (\n                            <li key={index} style={{ color: result.color }}>\n                                {result.color}: {result.ratio}\n                            </li>\n                        ))}\n                    </ul>\n                </div>\n            </div>\n        </div>\n    );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}