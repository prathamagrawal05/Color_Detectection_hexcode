{"ast":null,"code":"'use strict';\n\nimport { squaredEuclidean } from 'ml-distance-euclidean';\nconst defaultOptions = {\n  distanceFunction: squaredEuclidean\n};\nexport default function nearestVector(listVectors, vector, options = defaultOptions) {\n  const distanceFunction = options.distanceFunction || defaultOptions.distanceFunction;\n  const similarityFunction = options.similarityFunction || defaultOptions.similarityFunction;\n  let vectorIndex = -1;\n  if (typeof similarityFunction === 'function') {\n    // maximum similarity\n    let maxSim = Number.MIN_VALUE;\n    for (let j = 0; j < listVectors.length; j++) {\n      const sim = similarityFunction(vector, listVectors[j]);\n      if (sim > maxSim) {\n        maxSim = sim;\n        vectorIndex = j;\n      }\n    }\n  } else if (typeof distanceFunction === 'function') {\n    // minimum distance\n    let minDist = Number.MAX_VALUE;\n    for (let i = 0; i < listVectors.length; i++) {\n      const dist = distanceFunction(vector, listVectors[i]);\n      if (dist < minDist) {\n        minDist = dist;\n        vectorIndex = i;\n      }\n    }\n  } else {\n    throw new Error(\"A similarity or distance function it's required\");\n  }\n  return vectorIndex;\n}\nexport function findNearestVector(vectorList, vector, options = defaultOptions) {\n  const index = nearestVector(vectorList, vector, options);\n  return vectorList[index];\n}","map":{"version":3,"names":["squaredEuclidean","defaultOptions","distanceFunction","nearestVector","listVectors","vector","options","similarityFunction","vectorIndex","maxSim","Number","MIN_VALUE","j","length","sim","minDist","MAX_VALUE","i","dist","Error","findNearestVector","vectorList","index"],"sources":["/Users/ashraygattani/Documents/most/my-react-app/node_modules/ml-nearest-vector/lib-es6/index.js"],"sourcesContent":["'use strict';\nimport { squaredEuclidean } from 'ml-distance-euclidean';\nconst defaultOptions = {\n    distanceFunction: squaredEuclidean\n};\nexport default function nearestVector(listVectors, vector, options = defaultOptions) {\n    const distanceFunction = options.distanceFunction || defaultOptions.distanceFunction;\n    const similarityFunction = options.similarityFunction || defaultOptions.similarityFunction;\n    let vectorIndex = -1;\n    if (typeof similarityFunction === 'function') {\n        // maximum similarity\n        let maxSim = Number.MIN_VALUE;\n        for (let j = 0; j < listVectors.length; j++) {\n            const sim = similarityFunction(vector, listVectors[j]);\n            if (sim > maxSim) {\n                maxSim = sim;\n                vectorIndex = j;\n            }\n        }\n    }\n    else if (typeof distanceFunction === 'function') {\n        // minimum distance\n        let minDist = Number.MAX_VALUE;\n        for (let i = 0; i < listVectors.length; i++) {\n            const dist = distanceFunction(vector, listVectors[i]);\n            if (dist < minDist) {\n                minDist = dist;\n                vectorIndex = i;\n            }\n        }\n    }\n    else {\n        throw new Error(\"A similarity or distance function it's required\");\n    }\n    return vectorIndex;\n}\nexport function findNearestVector(vectorList, vector, options = defaultOptions) {\n    const index = nearestVector(vectorList, vector, options);\n    return vectorList[index];\n}\n"],"mappings":"AAAA,YAAY;;AACZ,SAASA,gBAAgB,QAAQ,uBAAuB;AACxD,MAAMC,cAAc,GAAG;EACnBC,gBAAgB,EAAEF;AACtB,CAAC;AACD,eAAe,SAASG,aAAaA,CAACC,WAAW,EAAEC,MAAM,EAAEC,OAAO,GAAGL,cAAc,EAAE;EACjF,MAAMC,gBAAgB,GAAGI,OAAO,CAACJ,gBAAgB,IAAID,cAAc,CAACC,gBAAgB;EACpF,MAAMK,kBAAkB,GAAGD,OAAO,CAACC,kBAAkB,IAAIN,cAAc,CAACM,kBAAkB;EAC1F,IAAIC,WAAW,GAAG,CAAC,CAAC;EACpB,IAAI,OAAOD,kBAAkB,KAAK,UAAU,EAAE;IAC1C;IACA,IAAIE,MAAM,GAAGC,MAAM,CAACC,SAAS;IAC7B,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGR,WAAW,CAACS,MAAM,EAAED,CAAC,EAAE,EAAE;MACzC,MAAME,GAAG,GAAGP,kBAAkB,CAACF,MAAM,EAAED,WAAW,CAACQ,CAAC,CAAC,CAAC;MACtD,IAAIE,GAAG,GAAGL,MAAM,EAAE;QACdA,MAAM,GAAGK,GAAG;QACZN,WAAW,GAAGI,CAAC;MACnB;IACJ;EACJ,CAAC,MACI,IAAI,OAAOV,gBAAgB,KAAK,UAAU,EAAE;IAC7C;IACA,IAAIa,OAAO,GAAGL,MAAM,CAACM,SAAS;IAC9B,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGb,WAAW,CAACS,MAAM,EAAEI,CAAC,EAAE,EAAE;MACzC,MAAMC,IAAI,GAAGhB,gBAAgB,CAACG,MAAM,EAAED,WAAW,CAACa,CAAC,CAAC,CAAC;MACrD,IAAIC,IAAI,GAAGH,OAAO,EAAE;QAChBA,OAAO,GAAGG,IAAI;QACdV,WAAW,GAAGS,CAAC;MACnB;IACJ;EACJ,CAAC,MACI;IACD,MAAM,IAAIE,KAAK,CAAC,iDAAiD,CAAC;EACtE;EACA,OAAOX,WAAW;AACtB;AACA,OAAO,SAASY,iBAAiBA,CAACC,UAAU,EAAEhB,MAAM,EAAEC,OAAO,GAAGL,cAAc,EAAE;EAC5E,MAAMqB,KAAK,GAAGnB,aAAa,CAACkB,UAAU,EAAEhB,MAAM,EAAEC,OAAO,CAAC;EACxD,OAAOe,UAAU,CAACC,KAAK,CAAC;AAC5B","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}