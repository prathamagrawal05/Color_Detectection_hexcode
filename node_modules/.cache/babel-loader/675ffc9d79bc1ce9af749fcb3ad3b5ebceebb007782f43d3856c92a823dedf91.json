{"ast":null,"code":"const LOOP = 8;\nconst FLOAT_MUL = 1 / 16777216;\nconst sh1 = 15;\nconst sh2 = 18;\nconst sh3 = 11;\nfunction multiply_uint32(n, m) {\n  n >>>= 0;\n  m >>>= 0;\n  const nlo = n & 0xffff;\n  const nhi = n - nlo;\n  return (nhi * m >>> 0) + nlo * m >>> 0;\n}\nexport default class XSadd {\n  constructor(seed = Date.now()) {\n    this.state = new Uint32Array(4);\n    this.init(seed);\n    this.random = this.getFloat.bind(this);\n  }\n  /**\n   * Returns a 32-bit integer r (0 <= r < 2^32)\n   */\n  getUint32() {\n    this.nextState();\n    return this.state[3] + this.state[2] >>> 0;\n  }\n  /**\n   * Returns a floating point number r (0.0 <= r < 1.0)\n   */\n  getFloat() {\n    return (this.getUint32() >>> 8) * FLOAT_MUL;\n  }\n  init(seed) {\n    if (!Number.isInteger(seed)) {\n      throw new TypeError('seed must be an integer');\n    }\n    this.state[0] = seed;\n    this.state[1] = 0;\n    this.state[2] = 0;\n    this.state[3] = 0;\n    for (let i = 1; i < LOOP; i++) {\n      this.state[i & 3] ^= i + multiply_uint32(1812433253, this.state[i - 1 & 3] ^ this.state[i - 1 & 3] >>> 30 >>> 0) >>> 0;\n    }\n    this.periodCertification();\n    for (let i = 0; i < LOOP; i++) {\n      this.nextState();\n    }\n  }\n  periodCertification() {\n    if (this.state[0] === 0 && this.state[1] === 0 && this.state[2] === 0 && this.state[3] === 0) {\n      this.state[0] = 88; // X\n      this.state[1] = 83; // S\n      this.state[2] = 65; // A\n      this.state[3] = 68; // D\n    }\n  }\n  nextState() {\n    let t = this.state[0];\n    t ^= t << sh1;\n    t ^= t >>> sh2;\n    t ^= this.state[3] << sh3;\n    this.state[0] = this.state[1];\n    this.state[1] = this.state[2];\n    this.state[2] = this.state[3];\n    this.state[3] = t;\n  }\n}","map":{"version":3,"names":["LOOP","FLOAT_MUL","sh1","sh2","sh3","multiply_uint32","n","m","nlo","nhi","XSadd","constructor","seed","Date","now","state","Uint32Array","init","random","getFloat","bind","getUint32","nextState","Number","isInteger","TypeError","i","periodCertification","t"],"sources":["/Users/ashraygattani/Documents/most/my-react-app/node_modules/ml-xsadd/lib-es6/xsadd.js"],"sourcesContent":["const LOOP = 8;\nconst FLOAT_MUL = 1 / 16777216;\nconst sh1 = 15;\nconst sh2 = 18;\nconst sh3 = 11;\nfunction multiply_uint32(n, m) {\n    n >>>= 0;\n    m >>>= 0;\n    const nlo = n & 0xffff;\n    const nhi = n - nlo;\n    return (((nhi * m) >>> 0) + nlo * m) >>> 0;\n}\nexport default class XSadd {\n    constructor(seed = Date.now()) {\n        this.state = new Uint32Array(4);\n        this.init(seed);\n        this.random = this.getFloat.bind(this);\n    }\n    /**\n     * Returns a 32-bit integer r (0 <= r < 2^32)\n     */\n    getUint32() {\n        this.nextState();\n        return (this.state[3] + this.state[2]) >>> 0;\n    }\n    /**\n     * Returns a floating point number r (0.0 <= r < 1.0)\n     */\n    getFloat() {\n        return (this.getUint32() >>> 8) * FLOAT_MUL;\n    }\n    init(seed) {\n        if (!Number.isInteger(seed)) {\n            throw new TypeError('seed must be an integer');\n        }\n        this.state[0] = seed;\n        this.state[1] = 0;\n        this.state[2] = 0;\n        this.state[3] = 0;\n        for (let i = 1; i < LOOP; i++) {\n            this.state[i & 3] ^=\n                (i +\n                    multiply_uint32(1812433253, this.state[(i - 1) & 3] ^ ((this.state[(i - 1) & 3] >>> 30) >>> 0))) >>>\n                    0;\n        }\n        this.periodCertification();\n        for (let i = 0; i < LOOP; i++) {\n            this.nextState();\n        }\n    }\n    periodCertification() {\n        if (this.state[0] === 0 &&\n            this.state[1] === 0 &&\n            this.state[2] === 0 &&\n            this.state[3] === 0) {\n            this.state[0] = 88; // X\n            this.state[1] = 83; // S\n            this.state[2] = 65; // A\n            this.state[3] = 68; // D\n        }\n    }\n    nextState() {\n        let t = this.state[0];\n        t ^= t << sh1;\n        t ^= t >>> sh2;\n        t ^= this.state[3] << sh3;\n        this.state[0] = this.state[1];\n        this.state[1] = this.state[2];\n        this.state[2] = this.state[3];\n        this.state[3] = t;\n    }\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}